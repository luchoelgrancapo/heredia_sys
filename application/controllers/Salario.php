<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Salario extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Salario_model');
        $this->load->model('Empresa_model');
        $this->load->model('Parametro_model');
        $this->load->model('Personal_model');
        $this->load->helper('numeros');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    } 

    /*
     * Listing of salario
     */
    /*function index()
    {
        $data['salario'] = $this->Salario_model->get_all_salario();
        
        $data['_view'] = 'salario/index';
        $this->load->view('layouts/main',$data);
    }*/

    function planilla($planilla_id)
    {
        $data['planilla'] = $this->Salario_model->get_planilla($planilla_id);
        $data['salario'] = $this->Salario_model->get_all_salarioplanilla($planilla_id);
        
        $data['_view'] = 'salario/planilla';
        $this->load->view('layouts/main',$data);
    }

    function crear_planilla()
    {
        $usuario_id = $this->session_data['usuario_id'];
        $parametros = $this->Parametro_model->get_parametros();
        $smn = $parametros[0]['parametro_smn'];
        $personal = $this->Personal_model->get_all_personal();
        $eliminar_aux = "DELETE FROM salario_aux WHERE usuario_id=".$usuario_id." ";
        $this->db->query($eliminar_aux);
        $fecha1= new DateTime("now");
        
        foreach ($personal as $p) {
        $fecha2= new DateTime($p['contrato_fechaing']);
        $diff = $fecha1->diff($fecha2);
        $cantidad = $diff->y;
        if ($cantidad<2) {
           $porc=0;
        }
        if ($cantidad>=2 && $cantidad<=4) {
           $porc=0.05;
        }
        if ($cantidad>=5 && $cantidad<=7) {
           $porc=0.11;
        }
        if ($cantidad>=8 && $cantidad<=10) {
           $porc=0.18;
        }
        if ($cantidad>=11 && $cantidad<=14) {
           $porc=0.26;
        }
        if ($cantidad>=15 && $cantidad<=19) {
           $porc=0.34;
        }
        if ($cantidad>=20 && $cantidad<=24) {
           $porc=0.42;
        }
        if ($cantidad>=25) {
           $porc=0.50;
        }
        //falta aporte solidario
        $ganancia=($p['contrato_sueldo'])+($smn*3*$porc);
        if ($ganancia<=13000) {
            $aporte = 0;
        }
        if ($ganancia>13000) {
            $aporte = ($ganancia-13000)*0.01;
        }
        if ($ganancia>25000) {
            $aporte = ($ganancia-25000)*0.05;
        }
        if ($ganancia>35000) {
            $aporte = ($ganancia-35000)*0.1;
        }

        $cargar_aux = "INSERT INTO salario_aux
    (personal_id,
    contrato_id,
    salario_ganado,
    salario_bonoant,
    salario_horasext,
    salario_bonohoras,
    salario_produccion,
    salario_dominical,
    salario_otrobono,
    salario_totalganado,
    salario_afp,
    salario_solidario,
    salario_iva,
    salario_ant,
    salario_totaldescuento,
    salario_loquidopagable,
    usuario_id
    )
    VALUES
    ( 
    ".$p['personal_id'].",
    ".$p['contrato_id'].",
    ".$p['contrato_sueldo'].",
    ".$smn."*3*".$porc.",
    0,
    0,
    0,
    0,
    0,
    ".$ganancia.",
    ".$p['contrato_sueldo']."*0.1271,
    ".$aporte.",
    0,
    0,
    (".$p['contrato_sueldo']."*0.1271)+".$aporte.",
    ".$ganancia."-((".$p['contrato_sueldo']."*0.1271)+".$aporte."),
    ".$usuario_id."
    )"; 
    $this->db->query($cargar_aux);
        }
        

    redirect('salario/verplanilla');
    

    }
    function verplanilla()
    {
        $data['parametros'] = $this->Parametro_model->get_parametros();
        $data['_view'] = 'salario/index';
        $this->load->view('layouts/main',$data);
    }

    function planilla_usuario()
    {
        $usuario_id = $this->session_data['usuario_id'];
        $datos = $this->Salario_model->get_planilla_aux($usuario_id);
    
        echo json_encode($datos);
    }

    function actualizar($salario_id)
    {   
        $horas = $this->input->post('horas');
        $produccion = $this->input->post('produccion');
        $dominical = $this->input->post('dominical');
        $otro = $this->input->post('otro');
        $iva = $this->input->post('iva');
        $anticipo = $this->input->post('anticipo');

        $actualizar = "UPDATE salario_aux SET
                        salario_horasext = ".$horas.",
                        salario_produccion = ".$produccion.",
                        salario_dominical = ".$dominical.",
                        salario_otrobono = ".$otro.",
                        salario_iva = ".$iva.",
                        salario_ant = ".$anticipo."
                        WHERE salario_id = ".$salario_id."
                        ";
        $this->db->query($actualizar);
        $actualizar_totales = "UPDATE salario_aux SET
                        
                        salario_bonohoras = salario_ganado/30/8 * salario_horasext * 2,
                        salario_totalganado = salario_ganado+salario_bonoant+(salario_ganado/30/8 * salario_horasext * 2)+salario_produccion+salario_dominical+salario_otrobono,
                        salario_totaldescuento = salario_afp+salario_solidario+salario_iva+salario_ant,
                        salario_loquidopagable = (salario_ganado+salario_bonoant+(salario_ganado/30/8 * salario_horasext * 2)+salario_produccion+salario_dominical+salario_otrobono)-(salario_afp+salario_solidario+salario_iva+salario_ant)
                        WHERE salario_id = ".$salario_id."
                        ";
        $this->db->query($actualizar_totales);
        $salario = $this->Salario_model->get_salarioaux($salario_id);
        $ganancia = $salario['salario_totalganado'];
        $aporte_ant = $salario['salario_solidario'];
        
        if ($ganancia>13000 && $ganancia<=25000) {
            $aporte = ($ganancia-13000)*0.01;
            $act_aporte = "UPDATE salario_aux SET salario_solidario = ".$aporte.", salario_totaldescuento=salario_totaldescuento + ".$aporte." - ".$aporte_ant."  WHERE salario_id = ".$salario_id." ";
            $this->db->query($act_aporte);
            $act_total = "UPDATE salario_aux SET salario_loquidopagable=salario_totalganado-salario_totaldescuento WHERE salario_id = ".$salario_id." ";
        $this->db->query($act_total);
        }
        if ($ganancia>25000 && $ganancia<=35000) {
            $aporte = ($ganancia-25000)*0.05;
            $act_aporte = "UPDATE salario_aux SET salario_solidario = ".$aporte.", salario_totaldescuento=salario_totaldescuento + ".$aporte." - ".$aporte_ant."  WHERE salario_id = ".$salario_id." ";
            $this->db->query($act_aporte);
            $act_total = "UPDATE salario_aux SET salario_loquidopagable=salario_totalganado-salario_totaldescuento WHERE salario_id = ".$salario_id." ";
        $this->db->query($act_total);
        }
        if ($ganancia>35000) {
            $aporte = ($ganancia-35000)*0.1;
            $act_aporte = "UPDATE salario_aux SET salario_solidario = ".$aporte.", salario_totaldescuento=salario_totaldescuento + ".$aporte." - ".$aporte_ant."  WHERE salario_id = ".$salario_id." ";
            $this->db->query($act_aporte);
            $act_total = "UPDATE salario_aux SET salario_loquidopagable=salario_totalganado-salario_totaldescuento WHERE salario_id = ".$salario_id." ";
        $this->db->query($act_total);
        }
        echo json_encode(true);

    }

    function busqueda_planilla()
    {
        $mes = $this->input->post('mes');
        $ano = $this->input->post('ano');
        $actualizar = "SELECT planilla_id FROM planilla
                        WHERE planilla_ano = ".$ano."
                        and planilla_mes = '".$mes."'
                        ";
        $existe = $this->db->query($actualizar)->result_array(); 
        echo json_encode($existe);
    }

    function procesar_planilla()
    {
        $usuario_id = $this->session_data['usuario_id'];
        $mes = $this->input->post('mes');
        $ano = $this->input->post('ano');
        $fecha = $this->input->post('fecha');
        $smn = $this->input->post('smn');
        $params = array(
                'planilla_mes' => $mes,
                'planilla_ano' => $ano,
                'planilla_fecha' => $fecha,
                'planilla_smn' => $smn,
                'usuario_id' => $usuario_id,
            );
            
        $planilla_id = $this->Salario_model->add_planilla($params);

    $cargar_salario = "INSERT INTO salario
    (personal_id,
    planilla_id,
    contrato_id,
    salario_ganado,
    salario_bonoant,
    salario_horasext,
    salario_bonohoras,
    salario_produccion,
    salario_dominical,
    salario_otrobono,
    salario_totalganado,
    salario_afp,
    salario_solidario,
    salario_iva,
    salario_ant,
    salario_totaldescuento,
    salario_loquidopagable,
    salario_fecha,
    usuario_id
    )
    
    (SELECT
    personal_id,
    ".$planilla_id.",
    contrato_id,
    salario_ganado,
    salario_bonoant,
    salario_horasext,
    salario_bonohoras,
    salario_produccion,
    salario_dominical,
    salario_otrobono,
    salario_totalganado,
    salario_afp,
    salario_solidario,
    salario_iva,
    salario_ant,
    salario_totaldescuento,
    salario_loquidopagable,
    salario_fecha,
    ".$usuario_id."
    FROM 
    salario_aux
    WHERE
    usuario_id=".$usuario_id."
    )"; 
    $this->db->query($cargar_salario);
    $eliminar_aux = "DELETE FROM salario_aux WHERE usuario_id=".$usuario_id." ";
    $this->db->query($eliminar_aux);

        echo json_encode(true);
    }

    /*
     * Adding a new salario
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'personal_id' => $this->input->post('personal_id'),
				'salario_ganado' => $this->input->post('salario_ganado'),
				'salario_bonoant' => $this->input->post('salario_bonoant'),
				'salario_horasext' => $this->input->post('salario_horasext'),
				'salario_bonohoras' => $this->input->post('salario_bonohoras'),
				'salario_produccion' => $this->input->post('salario_produccion'),
				'salario_dominical' => $this->input->post('salario_dominical'),
				'salario_otrobono' => $this->input->post('salario_otrobono'),
				'salario_totalganado' => $this->input->post('salario_totalganado'),
				'salario_afp' => $this->input->post('salario_afp'),
				'salario_solidario' => $this->input->post('salario_solidario'),
				'salario_iva' => $this->input->post('salario_iva'),
				'salario_ant' => $this->input->post('salario_ant'),
				'salario_totaldescuento' => $this->input->post('salario_totaldescuento'),
				'salario_loquidopagable' => $this->input->post('salario_loquidopagable'),
				'salario_fecha' => $this->input->post('salario_fecha'),
				'usuario_id' => $this->input->post('usuario_id'),
            );
            
            $salario_id = $this->Salario_model->add_salario($params);
            redirect('salario/index');
        }
        else
        {
			$this->load->model('Personal_model');
			$data['all_personal'] = $this->Personal_model->get_all_personal();
            
            $data['_view'] = 'salario/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a salario
     */
    function edit($salario_id)
    {   
        // check if the salario exists before trying to edit it
        $data['salario'] = $this->Salario_model->get_salario($salario_id);
        
        if(isset($data['salario']['salario_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'personal_id' => $this->input->post('personal_id'),
					'salario_ganado' => $this->input->post('salario_ganado'),
					'salario_bonoant' => $this->input->post('salario_bonoant'),
					'salario_horasext' => $this->input->post('salario_horasext'),
					'salario_bonohoras' => $this->input->post('salario_bonohoras'),
					'salario_produccion' => $this->input->post('salario_produccion'),
					'salario_dominical' => $this->input->post('salario_dominical'),
					'salario_otrobono' => $this->input->post('salario_otrobono'),
					'salario_totalganado' => $this->input->post('salario_totalganado'),
					'salario_afp' => $this->input->post('salario_afp'),
					'salario_solidario' => $this->input->post('salario_solidario'),
					'salario_iva' => $this->input->post('salario_iva'),
					'salario_ant' => $this->input->post('salario_ant'),
					'salario_totaldescuento' => $this->input->post('salario_totaldescuento'),
					'salario_loquidopagable' => $this->input->post('salario_loquidopagable'),
					'salario_fecha' => $this->input->post('salario_fecha'),
					'usuario_id' => $this->input->post('usuario_id'),
                );

                $this->Salario_model->update_salario($salario_id,$params);            
                redirect('salario/index');
            }
            else
            {
				$this->load->model('Personal_model');
				$data['all_personal'] = $this->Personal_model->get_all_personal();

                $data['_view'] = 'salario/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The salario you are trying to edit does not exist.');
    } 

    /*
     * Deleting salario
     */
    function remove($salario_id)
    {
        $salario = $this->Salario_model->get_salario($salario_id);

        // check if the salario exists before trying to delete it
        if(isset($salario['salario_id']))
        {
            $this->Salario_model->delete_salario($salario_id);
            redirect('salario/index');
        }
        else
            show_error('The salario you are trying to delete does not exist.');
    }

    function recibo($salario_id)
    {
        $data['salario'] = $this->Salario_model->get_salariocontrato($salario_id);
        $data['parametro'] =  $parametros = $this->Parametro_model->get_parametros();
        $data['empresa'] = $this->Empresa_model->get_empresa(1);    
        $data['_view'] = 'salario/recibo';
        $this->load->view('layouts/main',$data);
        
    }
    
}

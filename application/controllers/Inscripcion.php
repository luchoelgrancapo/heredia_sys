<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inscripcion extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Inscripcion_model');
        $this->load->model('Servicio_temporal_model');
        $this->load->model('Forma_pago_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        } 
    } 

    /*
     * Listing of inscripcion
     */
    function index()
    {
        //$data['inscripcion'] = $this->Inscripcion_model->get_all_inscripcion();
        
        $data['_view'] = 'inscripcion/index';
        $this->load->view('layouts/main',$data);
    }

    function coliseo()
    {
        //$data['inscripcion'] = $this->Inscripcion_model->get_all_inscripcion();
        
        $data['_view'] = 'inscripcion/coliseo';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new inscripcion
     */
    function add()
    {   
        $usuario_id = $this->session_data['usuario_id'];
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'cliente_id' => $this->input->post('cliente_id'),
				'serviciote_id' => $this->input->post('serviciote_id'),
				'estado_id' => 1,
				'inscripcion_fechaini' => $this->input->post('inscripcion_fechaini'),
				'inscripcion_fechafin' => $this->input->post('inscripcion_fechafin'),
				'inscripcion_monto' => $this->input->post('inscripcion_monto'),
                'forma_id' => $this->input->post('forma_id'),
                'usuario_id' => $usuario_id,
            );
            
            $inscripcion_id = $this->Inscripcion_model->add_inscripcion($params);
            redirect('inscripcion');
        }
        else
        {   
            $data['forma_pago'] = $this->Forma_pago_model->get_all_forma();
            $data['all_servicio'] = $this->Servicio_temporal_model->get_all_servicio_temporal();         
            $data['_view'] = 'inscripcion/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a inscripcion
     */
    function edit($inscripcion_id)
    {   
        // check if the inscripcion exists before trying to edit it
        $data['inscripcion'] = $this->Inscripcion_model->get_inscripcion($inscripcion_id);
        
        if(isset($data['inscripcion']['inscripcion_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'cliente_id' => $this->input->post('cliente_id'),
					'serviciote_id' => $this->input->post('serviciote_id'),
					'estado_id' => $this->input->post('estado_id'),
					'inscripcion_fechaini' => $this->input->post('inscripcion_fechaini'),
					'inscripcion_fechafin' => $this->input->post('inscripcion_fechafin'),
					'inscripcion_monto' => $this->input->post('inscripcion_monto'),
                );

                $this->Inscripcion_model->update_inscripcion($inscripcion_id,$params);            
                redirect('inscripcion');
            }
            else
            {
                $data['_view'] = 'inscripcion/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The inscripcion you are trying to edit does not exist.');
    } 
 
    /*
     * Deleting inscripcion
     */
    function remove($inscripcion_id)
    {
        $inscripcion = $this->Inscripcion_model->get_inscripcion($inscripcion_id);

        // check if the inscripcion exists before trying to delete it
        if(isset($inscripcion['inscripcion_id']))
        {
            $this->Inscripcion_model->delete_inscripcion($inscripcion_id);
            redirect('inscripcion/index');
        }
        else
            show_error('The inscripcion you are trying to delete does not exist.');
    }

    function buscarfecha()
    {
         

        if ($this->input->is_ajax_request()) {
            
            $filtro = $this->input->post('filtro');
            $estado = $this->input->post('estado');
          
            $result = $this->Inscripcion_model->fechainscripcion($filtro,$estado);            
      
           echo json_encode($result);
         }     
    }

    function calcular_fecha()
    {
         
        if ($this->input->is_ajax_request()) {
            
            $servicio = $this->input->post('servicio');          
            $result = $this->Servicio_temporal_model->get_servicio_temporal($servicio);            
      
           echo json_encode($result);
         }     
    }

    function reinscripcion($inscripcion_id)
    {
        if ($this->input->is_ajax_request()) {
            $result['formas'] = $this->Forma_pago_model->get_all_forma();            
            $result['inscripcion'] = $this->Inscripcion_model->get_inscripcion($inscripcion_id);          
            $result['servicios'] = $this->Servicio_temporal_model->get_all_servicio_temporal();
           echo json_encode($result);
         } 
    }

    function buscarcliente()
    {
        if ($this->input->is_ajax_request()) {       
                    
                    $cliente_ci = $this->input->post('cliente_ci');                    
                    $datos = $this->Inscripcion_model->buscar_cliente($cliente_ci);
                    echo json_encode($datos);                        

                }
    }

    
}

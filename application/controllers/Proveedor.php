<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Proveedor extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Proveedor_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in')
            ;
        }else {
            redirect('', 'refresh');
        }
    } 
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Listing of proveedor
     */
     
    function index()
    {
        if($this->acceso(110)) {
                $usuario_id = $this->session_data['usuario_id'];
                $data['rol'] = $this->session_data['rol'];
       
        $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        
        $data['a'] = "0";
        $data['proveedor'] = $this->Proveedor_model->get_all_proveedor();
        $data['total'] = $this->Proveedor_model->get_all_proveedor_count();
        $data['page_title'] = "Proveedor";
        $data['_view'] = 'proveedor/index';
        $this->load->view('layouts/main',$data);
            }
            
    }

    /*
     * Adding a new proveedor
     */
    function add()
    {   
         if($this->acceso(111)){
                $usuario_id = $this->session_data['usuario_id'];
        $this->load->library('form_validation');
    $this->form_validation->set_rules('proveedor_nombre','proveedor_nombre','is_unique[proveedor.proveedor_nombre]', array('is_unique' => 'Este Proveedor ya fue Registrado'));
    $this->form_validation->set_rules('proveedor_codigo','proveedor_codigo','is_unique[proveedor.proveedor_codigo]', array('is_unique' => 'Este Codigo ya fue Registrado'));
        
        if($this->form_validation->run())     
        {   

            /* *********************INICIO imagen***************************** */
            $foto="";
            if (!empty($_FILES['chivo']['name'])){
                        $this->load->library('image_lib');
                        $config['upload_path'] = './resources/images/proveedores/';
                        $img_full_path = $config['upload_path'];

                        $config['allowed_types'] = 'gif|jpeg|jpg|png';
                        $config['max_size'] = 0;
                        $config['max_width'] = 5900;
                        $config['max_height'] = 5900;
                        
                        $new_name = time();
                    $config['file_name'] = $new_name;
                        $config['file_ext_tolower'] = TRUE;

                        $this->load->library('upload', $config);
                        $this->upload->do_upload('chivo');

                        $img_data = $this->upload->data();
                        $extension = $img_data['file_ext'];
                        /* ********************INICIO para resize***************************** */
                        if ($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                            $conf['image_library'] = 'gd2';
                            $conf['source_image'] = $img_data['full_path'];
                            $conf['new_image'] = './resources/images/proveedores/';
                            $conf['maintain_ratio'] = TRUE;
                            $conf['create_thumb'] = FALSE;
                            $conf['width'] = 800;
                            $conf['height'] = 600;
                            $this->image_lib->clear();
                            $this->image_lib->initialize($conf);
                            if(!$this->image_lib->resize()){
                                echo $this->image_lib->display_errors('','');
                            }
                        }
                        /* ********************F I N  para resize***************************** */
                        $confi['image_library'] = 'gd2';
                        $confi['source_image'] = './resources/images/proveedores/'.$new_name.$extension;
                        $confi['new_image'] = './resources/images/proveedores/'."thumb_".$new_name.$extension;
                        $confi['create_thumb'] = FALSE;
                        $confi['maintain_ratio'] = TRUE;
                        $confi['width'] = 50;
                        $confi['height'] = 50;

                        $this->image_lib->clear();
                        $this->image_lib->initialize($confi);
                        $this->image_lib->resize();

                        $foto = $new_name.$extension;
                    }
            /* *********************FIN imagen***************************** */
            $estado = 1;
            $params = array(
                'estado_id' => $estado,
                'categoriaprov_id' => $this->input->post('categoriaprov_id'),
                'proveedor_codigo' => $this->input->post('proveedor_codigo'),
                'proveedor_nombre' => $this->input->post('proveedor_nombre'),
                'proveedor_foto' => $foto,
                'proveedor_contacto' => $this->input->post('proveedor_contacto'),
                'proveedor_direccion' => $this->input->post('proveedor_direccion'),
                'proveedor_telefono' => $this->input->post('proveedor_telefono'),
                'proveedor_telefono2' => $this->input->post('proveedor_telefono2'),
                'proveedor_email' => $this->input->post('proveedor_email'),
                'proveedor_nit' => $this->input->post('proveedor_nit'),
                'proveedor_razon' => $this->input->post('proveedor_razon'),
                'proveedor_autorizacion' => $this->input->post('proveedor_autorizacion'),
            );
            
            $categorias=$this->input->post('categoriaprov_id');
            $sql = "UPDATE categoria_proveedor SET categoriaprov_numero=categoriaprov_numero+1 WHERE categoriaprov_id = ".$categorias." "; 
                $this->db->query($sql);
            $proveedor_id = $this->Proveedor_model->add_proveedor($params);
            redirect('proveedor/index');
        }
        else
        {
            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado();
            $data['all_categoria_proveedor'] = $this->Proveedor_model->get_all_categoria();
            $data['page_title'] = "Proveedor";
            $data['_view'] = 'proveedor/add';
            $this->load->view('layouts/main',$data);
        }
            }
            
    }

    function rapido()
    {   
        if($this->acceso(4)){
         $this->load->library('form_validation');
        $this->form_validation->set_rules('proveedor_nombre','proveedor_nombre','is_unique[proveedor.proveedor_nombre]', array('is_unique' => 'Este Proveedor ya fue Registrado'));
        $this->form_validation->set_rules('categoriaprov_id','Proveedor Categoria','required');
        
        if($this->form_validation->run())     
        {   

          if ($this->input->is_ajax_request()) { 
        $compra_id = $this->input->post('compra_id');
        
        $this->load->model('Compra_model');
        $estado= 1;
  
           
            $params = array(
                'estado_id' => $estado,
                'categoriaprov_id' => $this->input->post('categoriaprov_id'),
                'proveedor_codigo' => $this->input->post('proveedor_codigo'),
                'proveedor_nombre' => $this->input->post('proveedor_nombre'),
                'proveedor_foto' => $this->input->post('proveedor_foto'),
                'proveedor_contacto' => $this->input->post('proveedor_contacto'),
                'proveedor_direccion' => $this->input->post('proveedor_direccion'),
                'proveedor_telefono2' => $this->input->post('proveedor_telefono2'),
                'proveedor_telefono' => $this->input->post('proveedor_telefono'),
                'proveedor_email' => $this->input->post('proveedor_email'),
                'proveedor_nit' => $this->input->post('proveedor_nit'),
                'proveedor_razon' => $this->input->post('proveedor_razon'),
                'proveedor_autorizacion' => $this->input->post('proveedor_autorizacion'),
            );

             
            
           $proveedor_id = $this->Proveedor_model->add_proveedor($params);
           $categorias=$this->input->post('categoriaprov_id');
            $sql = "UPDATE categoria_proveedor SET categoriaprov_numero=categoriaprov_numero+1 WHERE categoriaprov_id = ".$categorias." "; 
                $this->db->query($sql);
   $this->Compra_model->cambiar_proveedor($compra_id,$proveedor_id);
        $datos =  $this->Compra_model->get_compra_proveedor($compra_id);
        if(isset($datos)){
                        echo json_encode($datos);
                    }else echo json_encode(null);
    }
        else
        {                 
                    show_404();
        }
        }else{
            echo json_encode(null);
        }

    }
}


    function cambiarproveedor()
    { 

        if($this->acceso(4)){

         if ($this->input->is_ajax_request()) {
       
   
        $proveedor_id = $this->input->post('proveedor_id');
        $compra_id = $this->input->post('compra_id');
        
        
        
        $this->load->model('Compra_model');
            
  
        $this->Compra_model->cambiar_proveedor($compra_id,$proveedor_id);
       
        $datos =  $this->Compra_model->get_compra_proveedor($compra_id);
    
            

        if(isset($datos)){
                        echo json_encode($datos);
                    }else echo json_encode(null);
    }
        else
        {                 
                    show_404();
        }          
    }
}

    /*
     * Editing a proveedor
     */
    function edit($proveedor_id)
    {   
         if($this->acceso(112)){
                $usuario_id = $this->session_data['usuario_id'];
        // check if the proveedor exists before trying to edit it
        $data['proveedor'] = $this->Proveedor_model->get_proveedor($proveedor_id);
        $proveedors = $this->Proveedor_model->get_proveedor($proveedor_id);
        
        if(isset($data['proveedor']['proveedor_id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('proveedor_codigo','Proveedor Codigo','required');
            $this->form_validation->set_rules('proveedor_nombre','Proveedor Nombre','required');
        
            if($this->form_validation->run())     
            {   

             /* *********************INICIO imagen***************************** */
                $foto="";
                    $foto1= $this->input->post('proveedor_foto1');
                if (!empty($_FILES['chivo']['name']))
                {
                    $this->load->library('image_lib');
                    $config['upload_path'] = './resources/images/proveedores/';
                    $config['allowed_types'] = 'gif|jpeg|jpg|png';
                    $config['max_size'] = 0;
                    $config['max_width'] = 5900;
                    $config['max_height'] = 5900;

                    $new_name = time();
                    $config['file_name'] = $new_name;
                    $config['file_ext_tolower'] = TRUE;

                    $this->load->library('upload', $config);
                    $this->upload->do_upload('chivo');

                    $img_data = $this->upload->data();
                    $extension = $img_data['file_ext'];
                    /* ********************INICIO para resize***************************** */
                    if($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                        $conf['image_library'] = 'gd2';
                        $conf['source_image'] = $img_data['full_path'];
                        $conf['new_image'] = './resources/images/proveedores/';
                        $conf['maintain_ratio'] = TRUE;
                        $conf['create_thumb'] = FALSE;
                        $conf['width'] = 800;
                        $conf['height'] = 600;
                        $this->image_lib->clear();
                        $this->image_lib->initialize($conf);
                        if(!$this->image_lib->resize()){
                            echo $this->image_lib->display_errors('','');
                        }
                    }
                    /* ********************F I N  para resize***************************** */
                    //$directorio = base_url().'resources/imagenes/';
                    $directorio = $_SERVER['DOCUMENT_ROOT'].'/ximpleman_web/resources/images/proveedores/';
                    if(isset($foto1) && !empty($foto1)){
                      if(file_exists($directorio.$foto1)){
                          unlink($directorio.$foto1);
                          $mimagenthumb = str_replace(".", "_thumb.", $foto1);
                          unlink($directorio.$mimagenthumb);
                      }
                  }
                    $confi['image_library'] = 'gd2';
                    $confi['source_image'] = './resources/images/proveedores/'.$new_name.$extension;
                    $confi['new_image'] = './resources/images/proveedores/'."thumb_".$new_name.$extension;
                    $confi['create_thumb'] = FALSE;
                    $confi['maintain_ratio'] = TRUE;
                    $confi['width'] = 50;
                    $confi['height'] = 50;

                    $this->image_lib->clear();
                    $this->image_lib->initialize($confi);
                    $this->image_lib->resize();

                    $foto = $new_name.$extension;
                }else{
                    $foto = $foto1;
                }
            /* *********************FIN imagen***************************** */
                $params = array(
                    'estado_id' => $this->input->post('estado_id'),
                    //'categoriaprov_id' => $this->input->post('categoriaprov_id'),
                    'proveedor_codigo' => $this->input->post('proveedor_codigo'),
                    'proveedor_nombre' => $this->input->post('proveedor_nombre'),
                    'proveedor_foto' => $foto,
                    'proveedor_contacto' => $this->input->post('proveedor_contacto'),
                    'proveedor_direccion' => $this->input->post('proveedor_direccion'),
                    'proveedor_telefono' => $this->input->post('proveedor_telefono'),
                    'proveedor_telefono2' => $this->input->post('proveedor_telefono2'),
                    'proveedor_email' => $this->input->post('proveedor_email'),
                    'proveedor_nit' => $this->input->post('proveedor_nit'),
                    'proveedor_razon' => $this->input->post('proveedor_razon'),
                    'proveedor_autorizacion' => $this->input->post('proveedor_autorizacion'),
                );

                /*$categorias=$this->input->post('categoriaprov_id');
                if ($categorias!=$proveedors["categoriaprov_id"]) {
                $sql = "UPDATE categoria_proveedor SET categoriaprov_numero=categoriaprov_numero+1 WHERE categoriaprov_id = ".$categorias." "; 
                $this->db->query($sql);
                }*/
                
                $this->Proveedor_model->update_proveedor($proveedor_id,$params);            
                redirect('proveedor/index');

            }
            else
            {
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();
                $data['all_categoria_proveedor'] = $this->Proveedor_model->get_all_categoria();
                $data['page_title'] = "Proveedor";
                $data['_view'] = 'proveedor/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The proveedor you are trying to edit does not exist.');
            }
           
    }


    /*
     * Deleting proveedor
     */
    function remove($proveedor_id)
    {
        $proveedor = $this->Proveedor_model->get_proveedor($proveedor_id);

        // check if the proveedor exists before trying to delete it
        if(isset($proveedor['proveedor_id']))
        {
            $this->Proveedor_model->delete_proveedor($proveedor_id);
            redirect('proveedor/index');
        }
        else
            show_error('The proveedor you are trying to delete does not exist.');
    }
    /* *********Busca proveedores*********** */
    function buscarproveedor($filtro)
    {
        if($this->acceso(113)){
                
                $data['proveedor'] = $this->Proveedor_model->get_busqueda_proveedor($filtro);
                $data['a'] = "1";
                $data['page_title'] = "Proveedor";
                $data['_view'] = 'proveedor/index';
                $this->load->view('layouts/main',$data);
            }
            
    }
    function buscarreproveedor()
    {
        if($this->acceso(113)){
                $filtro = $this->input->post('parametro');
                $data = $this->Proveedor_model->get_busqueda_proveedor($filtro);
                echo json_encode($data);
            }
            
    }

        function nuevo_categoria()
    {
        if($this->acceso(103)) {
            if ($this->input->is_ajax_request()) {
                $parametro = $this->input->post('parametro');
                if($parametro != ""){
                    $params = array(
                    'categoriaprov_descripcion' => $parametro,
                    'categoriaprov_numero' => 0,

                    );
                    $categoria_id = $this->Proveedor_model->add_categoria_proveedor($params);
                    $datos = $this->Proveedor_model->get_categoria_proveedor($categoria_id);
                    echo json_encode($datos);
                }else{
                    echo json_encode(null);
                }
            }
            else
            {                 
                show_404();
            }
        }
    }

    function datos()
    {
        if($this->acceso(103)) {
            if ($this->input->is_ajax_request()) {
                $parametro = $this->input->post('parametro');
                
                    $datos = $this->Proveedor_model->get_categoria_proveedor($parametro);
                    echo json_encode($datos);
                }else{
                    echo json_encode(null);
                }
            }
            else
            {                 
                show_404();
            }
        
    }
}
